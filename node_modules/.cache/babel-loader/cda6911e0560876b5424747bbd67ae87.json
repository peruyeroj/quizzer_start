{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph Peruyero\\\\Desktop\\\\Task 11-Quizzer\\\\quizzer_start\\\\src\\\\quizzer\\\\Quizzer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { QuizList } from \"./QuizList\";\nimport { AddQuizModal } from \"./AddQuizModal\";\nimport \"./Quizzer.css\";\nimport sample from \"../data/quizzes.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QUIZZES = sample.map(_c = quiz => ({ ...quiz,\n  questionList: quiz.questionList.map(q => ({ ...q,\n    submission: \"\",\n    type: q.type\n  }))\n}));\n_c2 = QUIZZES;\nexport const Quizzer = () => {\n  _s();\n\n  const [quizzes, setQuizzes] = useState(QUIZZES);\n  const [showAddModal, setShowAddModal] = useState(false);\n\n  function editQuiz(qId, newQuiz) {\n    setQuizzes(quizzes.map(q => q.id === qId ? newQuiz : q));\n  }\n\n  function addQuiz(title, body) {\n    const newQuiz = {\n      id: quizzes.length,\n      title: title,\n      body: body,\n      published: false,\n      questionList: []\n    };\n    setQuizzes([...quizzes, newQuiz]);\n  }\n\n  function deleteQuiz(qId) {\n    setQuizzes(quizzes.filter(q => qId !== q.id));\n  }\n\n  const handleShowModal = () => setShowAddModal(true);\n\n  const handleCloseModal = () => setShowAddModal(false);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"quizzer\",\n    children: [/*#__PURE__*/_jsxDEV(QuizList, {\n      quizzes: quizzes,\n      editQuiz: editQuiz,\n      deleteQuiz: deleteQuiz,\n      showModal: handleShowModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddQuizModal, {\n      show: showAddModal,\n      handleClose: handleCloseModal,\n      addQuiz: addQuiz\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: \"white\"\n      },\n      children: \"Application Sketch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: \"white\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Completed Features\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"completedList\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\" \", \"Users can see a list of quizzes, including the quizzes title, description, and how many questions it has (TESTED)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can select a specific quiz to see the questions, including the questions name, body, and points (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Quiz questions can be of AT LEAST two types: a short answer question or multiple choice question (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can enter or choose an answer for a quiz question, and be told if they are correct (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can see how many total points they have earned (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can clear out their existing answers for a quiz (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can publish or unpublish a question (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can filter the questions in a list so that only published questions are shown (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can edit the questions and fields of a quiz (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can add a new quiz question (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can delete an existing quiz question (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can reorder quiz questions (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can add a new quiz (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"Users can delete an existing quiz (TESTED)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quizzer, \"m0d1gjGLG2L4wpO966WQ8E0t96o=\");\n\n_c3 = Quizzer;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"QUIZZES$sample.map\");\n$RefreshReg$(_c2, \"QUIZZES\");\n$RefreshReg$(_c3, \"Quizzer\");","map":{"version":3,"sources":["C:/Users/Joseph Peruyero/Desktop/Task 11-Quizzer/quizzer_start/src/quizzer/Quizzer.tsx"],"names":["React","useState","QuizList","AddQuizModal","sample","QUIZZES","map","quiz","questionList","q","submission","type","Quizzer","quizzes","setQuizzes","showAddModal","setShowAddModal","editQuiz","qId","newQuiz","id","addQuiz","title","body","length","published","deleteQuiz","filter","handleShowModal","handleCloseModal","color"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Quiz } from \"../interfaces/quiz\";\r\nimport { Question, QuestionType } from \"../interfaces/question\";\r\nimport { QuizList } from \"./QuizList\";\r\nimport { AddQuizModal } from \"./AddQuizModal\";\r\n\r\nimport \"./Quizzer.css\";\r\nimport sample from \"../data/quizzes.json\";\r\n\r\nconst QUIZZES = sample.map(\r\n  (quiz): Quiz => ({\r\n    ...quiz,\r\n    questionList: quiz.questionList.map(\r\n      (q): Question => ({\r\n        ...q,\r\n        submission: \"\",\r\n        type: q.type as QuestionType,\r\n      })\r\n    ),\r\n  })\r\n);\r\n\r\nexport const Quizzer = () => {\r\n  const [quizzes, setQuizzes] = useState<Quiz[]>(QUIZZES);\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n\r\n  function editQuiz(qId: number, newQuiz: Quiz) {\r\n    setQuizzes(quizzes.map((q: Quiz): Quiz => (q.id === qId ? newQuiz : q)));\r\n  }\r\n\r\n  function addQuiz(title: string, body: string) {\r\n    const newQuiz: Quiz = {\r\n      id: quizzes.length,\r\n      title: title,\r\n      body: body,\r\n      published: false,\r\n      questionList: [],\r\n    };\r\n    setQuizzes([...quizzes, newQuiz]);\r\n  }\r\n\r\n  function deleteQuiz(qId: number) {\r\n    setQuizzes(quizzes.filter((q: Quiz): boolean => qId !== q.id));\r\n  }\r\n\r\n  const handleShowModal = () => setShowAddModal(true);\r\n  const handleCloseModal = () => setShowAddModal(false);\r\n\r\n  return (\r\n    <div className=\"quizzer\">\r\n      <QuizList\r\n        quizzes={quizzes}\r\n        editQuiz={editQuiz}\r\n        deleteQuiz={deleteQuiz}\r\n        showModal={handleShowModal}\r\n      ></QuizList>\r\n      <AddQuizModal\r\n        show={showAddModal}\r\n        handleClose={handleCloseModal}\r\n        addQuiz={addQuiz}\r\n      ></AddQuizModal>\r\n      <hr />\r\n      <h2 style={{ color: \"white\" }}>Application Sketch</h2>\r\n      {/* <img src={require(\"./sketchFINAL.jpg\")} /> */}\r\n      <hr />\r\n      <div style={{ color: \"white\" }}>\r\n        <h2>Completed Features</h2>\r\n        <ul className=\"completedList\">\r\n          <li>\r\n            {\" \"}\r\n            Users can see a list of quizzes, including the quizzes title,\r\n            description, and how many questions it has (TESTED)\r\n          </li>\r\n          <li>\r\n            Users can select a specific quiz to see the questions, including the\r\n            questions name, body, and points (TESTED)\r\n          </li>\r\n          <li>\r\n            Quiz questions can be of AT LEAST two types: a short answer question\r\n            or multiple choice question (TESTED)\r\n          </li>\r\n          <li>\r\n            Users can enter or choose an answer for a quiz question, and be told\r\n            if they are correct (TESTED)\r\n          </li>\r\n          <li>Users can see how many total points they have earned (TESTED)</li>\r\n          <li>\r\n            Users can clear out their existing answers for a quiz (TESTED)\r\n          </li>\r\n          <li>Users can publish or unpublish a question (TESTED)</li>\r\n          <li>\r\n            Users can filter the questions in a list so that only published\r\n            questions are shown (TESTED)\r\n          </li>\r\n          <li>Users can edit the questions and fields of a quiz (TESTED)</li>\r\n          <li>Users can add a new quiz question (TESTED)</li>\r\n          <li>Users can delete an existing quiz question (TESTED)</li>\r\n          <li>Users can reorder quiz questions (TESTED)</li>\r\n          <li>Users can add a new quiz (TESTED)</li>\r\n          <li>Users can delete an existing quiz (TESTED)</li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}