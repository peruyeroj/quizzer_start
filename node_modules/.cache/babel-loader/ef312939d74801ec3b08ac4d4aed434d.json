{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph Peruyero\\\\Desktop\\\\Task 11-Quizzer\\\\quizzer_start\\\\src\\\\quizzer\\\\QuestionEdit.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport \"./QuestionEdit.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const QuestionEdit = _ref => {\n  _s();\n\n  let {\n    index,\n    lastIndex,\n    question,\n    editQuestion,\n    removeQuestion,\n    swapQuestion\n  } = _ref;\n  const [a, b] = useState(question.options.findIndex(s => question.expected === s));\n\n  const handleNumOptions = e => {\n    b(0);\n    const newNum = parseInt(e.target.value) < 1 ? 1 : parseInt(e.target.value);\n    editQuestion(question.id, { ...question,\n      type: \"multiple_choice_question\",\n      expected: \"Example Answer\",\n      options: Array(newNum).fill(\"Example Answer\")\n    });\n  };\n\n  const switchMulti = () => {\n    b(0);\n    editQuestion(question.id, { ...question,\n      type: \"multiple_choice_question\",\n      expected: \"Example Answer\",\n      options: Array(3).fill(\"Example Answer\")\n    });\n  };\n\n  const handlePoints = e => {\n    question.points = parseInt(e.target.value);\n    editQuestion(question.id, question);\n  };\n\n  const handleChoiceChange = (e, i) => {\n    const newOptions = [...question.options];\n    newOptions.splice(i, 1, e.target.value);\n    editQuestion(question.id, { ...question,\n      options: newOptions,\n      expected: a === i ? e.target.value : question.expected\n    });\n  };\n\n  const handleRadioChange = e => {\n    const idx = parseInt(e.target.value);\n    b(idx);\n    editQuestion(question.id, { ...question,\n      expected: question.options[idx]\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit_question\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit_title_row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit_title_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [index + 1, \". \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"title_input\",\n            controlId: \"editTitleFormId\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: question.body,\n              \"data-testid\": \"edit_question_title\",\n              onChange: e => {\n                editQuestion(question.id, { ...question,\n                  body: e.target.value\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit_title_box\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            className: \"points_input\",\n            controlId: \"editPointsFormId\",\n            children: /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: question.points,\n              type: \"number\",\n              onChange: handlePoints\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: [\"pt\", question.points !== 1 ? \"s\" : \"\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"center_section\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"edit_answer_box\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"type_form\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"questionTypeFormId\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Type: \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Select, {\n                className: \"type_dropdown\",\n                value: question.type,\n                onChange: () => switchMulti(),\n                children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                  \"data-testid\": \"question_type_dropdown_\" + index,\n                  value: \"multiple_choice_question\",\n                  children: \"Multiple Choice\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                  \"data-testid\": \"question_type_dropdown_\" + index,\n                  value: \"short_answer_question\",\n                  children: \"Short Answer\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 122,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 15\n            }, this), question.type === \"multiple_choice_question\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                controlId: \"editNumChoicesId\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  children: \"Choices: \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  className: \"num_choices\",\n                  value: question.options.length,\n                  type: \"number\",\n                  onChange: handleNumOptions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 19\n              }, this)\n            }, void 0, false)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [question.type === \"short_answer_question\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formEditShortExpectedBox\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                value: question.expected,\n                onChange: e => {\n                  editQuestion(question.id, { ...question,\n                    expected: e.target.value\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this), question.type === \"multiple_choice_question\" && /*#__PURE__*/_jsxDEV(Form.Group, {\n              controlId: \"formEditMultipleExpectedBox\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                children: \"Answer:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 19\n              }, this), question.options.map((option, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"radio_question_box\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"radio\",\n                  name: \"questionChoice\" + index,\n                  value: i,\n                  checked: a === i,\n                  onChange: handleRadioChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                  name: \"questionChoice\" + index,\n                  value: option,\n                  onChange: e => {\n                    handleChoiceChange(e, i);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 23\n                }, this)]\n              }, i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"swap_button_container\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            disabled: index === 0,\n            className: \"swap_button\",\n            onClick: () => {\n              swapQuestion(index, index - 1);\n            },\n            children: \"\\u25B2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            disabled: index === lastIndex,\n            className: \"swap_button\",\n            onClick: () => {\n              swapQuestion(index, index + 1);\n            },\n            children: \"\\u25BC\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit_question_footer\",\n        children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n          className: \"published_question_check\",\n          \"data-testid\": \"question_published_check\",\n          type: \"checkbox\",\n          id: \"is_question_published_check\",\n          label: \"Published\",\n          checked: question.published,\n          onChange: e => {\n            editQuestion(question.id, { ...question,\n              published: e.target.checked\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => {\n            removeQuestion(question.id);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(QuestionEdit, \"UUjBrgS9l6kLlI1/YIgmu+INyxc=\");\n\n_c = QuestionEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuestionEdit\");","map":{"version":3,"sources":["C:/Users/Joseph Peruyero/Desktop/Task 11-Quizzer/quizzer_start/src/quizzer/QuestionEdit.tsx"],"names":["React","useState","Button","Form","QuestionEdit","index","lastIndex","question","editQuestion","removeQuestion","swapQuestion","a","b","options","findIndex","s","expected","handleNumOptions","e","newNum","parseInt","target","value","id","type","Array","fill","switchMulti","handlePoints","points","handleChoiceChange","i","newOptions","splice","handleRadioChange","idx","body","length","map","option","published","checked"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Question } from \"../interfaces/question\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport \"./QuestionEdit.css\";\r\n\r\ninterface QuestionEditInterface {\r\n  index: number;\r\n  lastIndex: number;\r\n  question: Question;\r\n  editQuestion: (questionId: number, newQuestion: Question) => void;\r\n  removeQuestion: (questionId: number) => void;\r\n  swapQuestion: (idx1: number, idx2: number) => void;\r\n}\r\n\r\nexport const QuestionEdit = ({\r\n  index,\r\n  lastIndex,\r\n  question,\r\n  editQuestion,\r\n  removeQuestion,\r\n  swapQuestion,\r\n}: QuestionEditInterface) => {\r\n  const [a, b] = useState<number>(\r\n    question.options.findIndex((s: string) => question.expected === s)\r\n  );\r\n\r\n  const handleNumOptions = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    b(0);\r\n    const newNum = parseInt(e.target.value) < 1 ? 1 : parseInt(e.target.value);\r\n    editQuestion(question.id, {\r\n      ...question,\r\n      type: \"multiple_choice_question\",\r\n      expected: \"Example Answer\",\r\n      options: Array(newNum).fill(\"Example Answer\"),\r\n    });\r\n  };\r\n\r\n  const switchMulti = () => {\r\n    b(0);\r\n    editQuestion(question.id, {\r\n      ...question,\r\n      type: \"multiple_choice_question\",\r\n      expected: \"Example Answer\",\r\n      options: Array(3).fill(\"Example Answer\"),\r\n    });\r\n  };\r\n\r\n  const handlePoints = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    question.points = parseInt(e.target.value);\r\n    editQuestion(question.id, question);\r\n  };\r\n\r\n  const handleChoiceChange = (\r\n    e: React.ChangeEvent<HTMLInputElement>,\r\n    i: number\r\n  ) => {\r\n    const newOptions = [...question.options];\r\n    newOptions.splice(i, 1, e.target.value);\r\n    editQuestion(question.id, {\r\n      ...question,\r\n      options: newOptions,\r\n      expected: a === i ? e.target.value : question.expected,\r\n    });\r\n  };\r\n\r\n  const handleRadioChange = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const idx = parseInt(e.target.value);\r\n    b(idx);\r\n    editQuestion(question.id, {\r\n      ...question,\r\n      expected: question.options[idx],\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <hr />\r\n      <div className=\"edit_question\">\r\n        <div className=\"edit_title_row\">\r\n          <div className=\"edit_title_box\">\r\n            <h4>{index + 1}. </h4>\r\n            <Form.Group className=\"title_input\" controlId=\"editTitleFormId\">\r\n              <Form.Control\r\n                value={question.body}\r\n                data-testid=\"edit_question_title\"\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                  editQuestion(question.id, {\r\n                    ...question,\r\n                    body: e.target.value,\r\n                  });\r\n                }}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n          </div>\r\n          <div className=\"edit_title_box\">\r\n            <Form.Group className=\"points_input\" controlId=\"editPointsFormId\">\r\n              <Form.Control\r\n                value={question.points}\r\n                type=\"number\"\r\n                onChange={handlePoints}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n            <h4>pt{question.points !== 1 ? \"s\" : \"\"}</h4>\r\n          </div>\r\n        </div>\r\n        <div className=\"center_section\">\r\n          <div className=\"edit_answer_box\">\r\n            <div className=\"type_form\">\r\n              <Form.Group controlId=\"questionTypeFormId\">\r\n                <Form.Label>Type: </Form.Label>\r\n                <Form.Select\r\n                  className=\"type_dropdown\"\r\n                  value={question.type}\r\n                  onChange={() => switchMulti()}\r\n                >\r\n                  <option\r\n                    data-testid={\"question_type_dropdown_\" + index}\r\n                    value=\"multiple_choice_question\"\r\n                  >\r\n                    Multiple Choice\r\n                  </option>\r\n                  <option\r\n                    data-testid={\"question_type_dropdown_\" + index}\r\n                    value=\"short_answer_question\"\r\n                  >\r\n                    Short Answer\r\n                  </option>\r\n                </Form.Select>\r\n              </Form.Group>\r\n              {question.type === \"multiple_choice_question\" && (\r\n                <>\r\n                  <Form.Group controlId=\"editNumChoicesId\">\r\n                    <Form.Label>Choices: </Form.Label>\r\n                    <Form.Control\r\n                      className=\"num_choices\"\r\n                      value={question.options.length}\r\n                      type=\"number\"\r\n                      onChange={handleNumOptions}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </>\r\n              )}\r\n            </div>\r\n            <div>\r\n              {question.type === \"short_answer_question\" && (\r\n                <Form.Group controlId=\"formEditShortExpectedBox\">\r\n                  <Form.Label>Answer:</Form.Label>\r\n                  <Form.Control\r\n                    value={question.expected}\r\n                    onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                      editQuestion(question.id, {\r\n                        ...question,\r\n                        expected: e.target.value,\r\n                      });\r\n                    }}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              )}\r\n              {question.type === \"multiple_choice_question\" && (\r\n                <Form.Group controlId=\"formEditMultipleExpectedBox\">\r\n                  <Form.Label>Answer:</Form.Label>\r\n                  {question.options.map((option: string, i: number) => (\r\n                    <div key={i} className=\"radio_question_box\">\r\n                      <Form.Check\r\n                        type=\"radio\"\r\n                        name={\"questionChoice\" + index}\r\n                        value={i}\r\n                        checked={a === i}\r\n                        onChange={handleRadioChange}\r\n                      />\r\n                      <Form.Control\r\n                        name={\"questionChoice\" + index}\r\n                        value={option}\r\n                        onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                          handleChoiceChange(e, i);\r\n                        }}\r\n                      ></Form.Control>\r\n                    </div>\r\n                  ))}\r\n                </Form.Group>\r\n              )}\r\n            </div>\r\n          </div>\r\n          <div className=\"swap_button_container\">\r\n            <Button\r\n              disabled={index === 0}\r\n              className=\"swap_button\"\r\n              onClick={() => {\r\n                swapQuestion(index, index - 1);\r\n              }}\r\n            >\r\n              ▲\r\n            </Button>\r\n            <Button\r\n              disabled={index === lastIndex}\r\n              className=\"swap_button\"\r\n              onClick={() => {\r\n                swapQuestion(index, index + 1);\r\n              }}\r\n            >\r\n              ▼\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div className=\"edit_question_footer\">\r\n          <Form.Check\r\n            className=\"published_question_check\"\r\n            data-testid=\"question_published_check\"\r\n            type=\"checkbox\"\r\n            id=\"is_question_published_check\"\r\n            label=\"Published\"\r\n            checked={question.published}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n              editQuestion(question.id, {\r\n                ...question,\r\n                published: e.target.checked,\r\n              });\r\n            }}\r\n          ></Form.Check>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={() => {\r\n              removeQuestion(question.id);\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}