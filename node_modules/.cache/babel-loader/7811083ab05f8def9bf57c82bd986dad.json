{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Joseph Peruyero\\\\Desktop\\\\Task 11-Quizzer\\\\quizzer_start\\\\src\\\\quizzer\\\\QuizEdit.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { QuestionEdit } from \"./QuestionEdit\";\nimport \"./QuizEdit.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QuizEdit = _ref => {\n  _s();\n\n  let {\n    quiz,\n    editQuiz,\n    deleteQuiz,\n    switchEdit,\n    resetView\n  } = _ref;\n  const [newQuiz, setNewQuiz] = useState({ ...quiz\n  });\n\n  const editQuestion = (questionId, newQuestion) => {\n    setNewQuiz({ ...newQuiz,\n      questionList: newQuiz.questionList.map(thisQuestion => thisQuestion.id === questionId ? newQuestion : thisQuestion)\n    });\n  };\n\n  const removeQuestion = questionId => {\n    setNewQuiz({ ...newQuiz,\n      questionList: newQuiz.questionList.filter(thisQuestion => thisQuestion.id !== questionId)\n    });\n  };\n\n  const saveChanges = () => {\n    editQuiz(quiz.id, { ...newQuiz\n    });\n  };\n\n  const swapQuestion = (idx1, idx2) => {\n    console.log(\"inside swap\");\n    const x1Question = { ...newQuiz.questionList[idx1]\n    };\n    const x2Question = { ...newQuiz.questionList[idx2]\n    };\n    newQuiz.questionList.splice(idx1, 1, x2Question);\n    newQuiz.questionList.splice(idx2, 1, x1Question);\n    setNewQuiz({ ...newQuiz,\n      questionList: newQuiz.questionList\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit_header\",\n      children: /*#__PURE__*/_jsxDEV(Form.Group, {\n        controlId: \"formEditQuizId\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"title_published_flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"edit_title_area\",\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Title: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              value: newQuiz.title,\n              onChange: e => setNewQuiz({ ...newQuiz,\n                title: e.target.value\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n            className: \"published_check\",\n            type: \"checkbox\",\n            id: \"is-published_check\",\n            label: \"Quiz Published\",\n            \"data-testid\": \"Quiz Published\",\n            checked: newQuiz.published,\n            onChange: e => {\n              setNewQuiz({ ...newQuiz,\n                published: !newQuiz.published\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n          children: \"Description: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n          as: \"textarea\",\n          rows: 3,\n          value: newQuiz.body,\n          onChange: e => setNewQuiz({ ...newQuiz,\n            body: e.target.value\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: newQuiz.questionList.map((q, index) => /*#__PURE__*/_jsxDEV(QuestionEdit, {\n        index: index,\n        lastIndex: newQuiz.questionList.length - 1,\n        question: q,\n        editQuestion: editQuestion,\n        removeQuestion: removeQuestion,\n        swapQuestion: swapQuestion\n      }, newQuiz.id + \"|\" + q.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        className: \"add_question_button\",\n        onClick: () => {\n          setNewQuiz({ ...newQuiz,\n            questionList: [...newQuiz.questionList, {\n              id: newQuiz.questionList.length,\n              body: \"Example Question\",\n              type: \"short_answer_question\",\n              options: [],\n              submission: \"\",\n              expected: \"Example Answer\",\n              points: 1,\n              published: false\n            }]\n          });\n        },\n        children: \"Add Question\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"edit_footer\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            variant: \"success\",\n            className: \"save_edit_btn\",\n            onClick: () => {\n              saveChanges();\n              switchEdit();\n            },\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            variant: \"warning\",\n            onClick: switchEdit,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"danger\",\n          onClick: () => {\n            deleteQuiz(quiz.id);\n            resetView();\n          },\n          children: \"Delete Quiz\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(QuizEdit, \"M88G0IYp1CY1+xuMciJ16c6dmZU=\");\n\n_c = QuizEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuizEdit\");","map":{"version":3,"sources":["C:/Users/Joseph Peruyero/Desktop/Task 11-Quizzer/quizzer_start/src/quizzer/QuizEdit.tsx"],"names":["React","useState","Button","Form","QuestionEdit","QuizEdit","quiz","editQuiz","deleteQuiz","switchEdit","resetView","newQuiz","setNewQuiz","editQuestion","questionId","newQuestion","questionList","map","thisQuestion","id","removeQuestion","filter","saveChanges","swapQuestion","idx1","idx2","console","log","x1Question","x2Question","splice","title","e","target","value","published","body","q","index","length","type","options","submission","expected","points"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\r\nimport { Button, Form } from \"react-bootstrap\";\r\nimport { Question } from \"../interfaces/question\";\r\nimport { Quiz } from \"../interfaces/quiz\";\r\nimport { QuestionEdit } from \"./QuestionEdit\";\r\n\r\nimport \"./QuizEdit.css\";\r\ninterface quizEditProps {\r\n  quiz: Quiz;\r\n  editQuiz: (quizId: number, quiz: Quiz) => void;\r\n  deleteQuiz: (quizId: number) => void;\r\n  switchEdit: () => void;\r\n  resetView: () => void;\r\n}\r\n\r\nexport const QuizEdit = ({\r\n  quiz,\r\n  editQuiz,\r\n  deleteQuiz,\r\n  switchEdit,\r\n  resetView,\r\n}: quizEditProps) => {\r\n  const [newQuiz, setNewQuiz] = useState<Quiz>({ ...quiz });\r\n\r\n  const editQuestion = (questionId: number, newQuestion: Question) => {\r\n    setNewQuiz({\r\n      ...newQuiz,\r\n      questionList: newQuiz.questionList.map((thisQuestion: Question) =>\r\n        thisQuestion.id === questionId ? newQuestion : thisQuestion\r\n      ),\r\n    });\r\n  };\r\n\r\n  const removeQuestion = (questionId: number) => {\r\n    setNewQuiz({\r\n      ...newQuiz,\r\n      questionList: newQuiz.questionList.filter(\r\n        (thisQuestion: Question): Boolean => thisQuestion.id !== questionId\r\n      ),\r\n    });\r\n  };\r\n\r\n  const saveChanges = () => {\r\n    editQuiz(quiz.id, { ...newQuiz });\r\n  };\r\n\r\n  const swapQuestion = (idx1: number, idx2: number) => {\r\n    console.log(\"inside swap\");\r\n    const x1Question = { ...newQuiz.questionList[idx1] };\r\n    const x2Question = { ...newQuiz.questionList[idx2] };\r\n    newQuiz.questionList.splice(idx1, 1, x2Question);\r\n    newQuiz.questionList.splice(idx2, 1, x1Question);\r\n    setNewQuiz({\r\n      ...newQuiz,\r\n      questionList: newQuiz.questionList,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"edit_header\">\r\n        <Form.Group controlId=\"formEditQuizId\">\r\n          <div className=\"title_published_flex\">\r\n            <div className=\"edit_title_area\">\r\n              <Form.Label>Title: </Form.Label>\r\n              <Form.Control\r\n                value={newQuiz.title}\r\n                onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n                  setNewQuiz({\r\n                    ...newQuiz,\r\n                    title: e.target.value,\r\n                  })\r\n                }\r\n              ></Form.Control>\r\n            </div>\r\n            <Form.Check\r\n              className=\"published_check\"\r\n              type=\"checkbox\"\r\n              id=\"is-published_check\"\r\n              label=\"Quiz Published\"\r\n              data-testid=\"Quiz Published\"\r\n              checked={newQuiz.published}\r\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\r\n                setNewQuiz({\r\n                  ...newQuiz,\r\n                  published: !newQuiz.published,\r\n                });\r\n              }}\r\n            ></Form.Check>\r\n          </div>\r\n          <Form.Label>Description: </Form.Label>\r\n          <Form.Control\r\n            as=\"textarea\"\r\n            rows={3}\r\n            value={newQuiz.body}\r\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\r\n              setNewQuiz({ ...newQuiz, body: e.target.value })\r\n            }\r\n          ></Form.Control>\r\n        </Form.Group>\r\n      </div>\r\n\r\n      <div>\r\n        {newQuiz.questionList.map((q: Question, index: number) => (\r\n          <QuestionEdit\r\n            key={newQuiz.id + \"|\" + q.id}\r\n            index={index}\r\n            lastIndex={newQuiz.questionList.length - 1}\r\n            question={q}\r\n            editQuestion={editQuestion}\r\n            removeQuestion={removeQuestion}\r\n            swapQuestion={swapQuestion}\r\n          ></QuestionEdit>\r\n        ))}\r\n      </div>\r\n      <hr />\r\n      <div>\r\n        <Button\r\n          className=\"add_question_button\"\r\n          onClick={() => {\r\n            setNewQuiz({\r\n              ...newQuiz,\r\n              questionList: [\r\n                ...newQuiz.questionList,\r\n                {\r\n                  id: newQuiz.questionList.length,\r\n                  body: \"Example Question\",\r\n                  type: \"short_answer_question\",\r\n                  options: [],\r\n                  submission: \"\",\r\n                  expected: \"Example Answer\",\r\n                  points: 1,\r\n                  published: false,\r\n                },\r\n              ],\r\n            });\r\n          }}\r\n        >\r\n          Add Question\r\n        </Button>\r\n        <div className=\"edit_footer\">\r\n          <div>\r\n            <Button\r\n              variant=\"success\"\r\n              className=\"save_edit_btn\"\r\n              onClick={() => {\r\n                saveChanges();\r\n                switchEdit();\r\n              }}\r\n            >\r\n              Save\r\n            </Button>\r\n            <Button variant=\"warning\" onClick={switchEdit}>\r\n              Cancel\r\n            </Button>\r\n          </div>\r\n          <Button\r\n            variant=\"danger\"\r\n            onClick={() => {\r\n              deleteQuiz(quiz.id);\r\n              resetView();\r\n            }}\r\n          >\r\n            Delete Quiz\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};"]},"metadata":{},"sourceType":"module"}